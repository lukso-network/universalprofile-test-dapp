import { getSelectedNetworkConfig } from '@/helpers/config'
import { MethodSelect } from '@/helpers/functionUtils'
import { LSPType } from '@/helpers/tokenUtils'

const { sampleUP, errorContract } = getSelectedNetworkConfig()

export const methods: MethodSelect[] = [
  {
    label: 'üí∞ Default',
  },
  {
    label: 'üí∞ Transfer LSP7/LSP8',
    call: 'transfer',
    inputs: [
      { type: 'address', name: 'from' },
      { type: 'address', name: 'to' },
      { type: 'uint256', name: 'amount', value: '1', isWei: 'ether' },
      { type: 'bool', name: 'force', value: false },
      { type: 'bytes', name: 'data', value: '0x' },
    ],
    hasSpecs: [LSPType.LSP7DigitalAsset, LSPType.LSP8IdentifiableDigitalAsset],
  },
  {
    label: 'üí∞ Authorize Operator LSP7',
    call: 'authorizeOperator',
    inputs: [
      { type: 'address', name: 'operator', value: sampleUP },
      { type: 'uint256', name: 'amount', value: '1' },
      { type: 'bytes', name: 'operatorNotificationData', value: '0x' },
    ],
    hasSpecs: [LSPType.LSP7DigitalAsset],
  },
  {
    label: 'üí∞ Revoke Operator LSP7 v12',
    call: 'revokeOperator',
    inputs: [
      { type: 'address', name: 'operator', value: sampleUP },
      { type: 'bool', name: 'notify', value: true },
      { type: 'bytes', name: 'operatorNotificationData', value: '0x' },
    ],
    hasSpecs: [LSPType.LSP7DigitalAsset],
  },
  {
    label: 'üí∞ Revoke Operator LSP7 v15',
    call: 'revokeOperator',
    inputs: [
      { type: 'address', name: 'operator', value: sampleUP },
      { type: 'address', name: 'tokenOwner', value: sampleUP },
      { type: 'bool', name: 'notify', value: true },
      { type: 'bytes', name: 'operatorNotificationData', value: '0x' },
    ],
    hasSpecs: [LSPType.LSP7DigitalAsset],
  },
  {
    label: 'üè¶ Mint LSP7',
    call: 'mint',
    inputs: [
      { type: 'address', name: 'to' },
      { type: 'uint256', name: 'amount', value: '1' },
      { type: 'bool', name: 'force', value: false },
      { type: 'bytes', name: 'data', value: '0x' },
    ],
    hasSpecs: [LSPType.LSP7DigitalAsset],
  },
  {
    label: 'üí∞ Authorize Operator LSP8',
    call: 'authorizeOperator',
    inputs: [
      { type: 'address', name: 'operator', value: sampleUP },
      { type: 'bytes32', name: 'tokenId', value: '1' },
      { type: 'bytes', name: 'operatorNotificationData', value: '0x' },
    ],
    hasSpecs: [LSPType.LSP8IdentifiableDigitalAsset],
  },
  {
    label: 'üí∞ Revoke Operator LSP8',
    call: 'revokeOperator',
    inputs: [
      { type: 'address', name: 'operator', value: sampleUP },
      { type: 'bytes32', name: 'tokenId', value: '1' },
      { type: 'bool', name: 'notify', value: true },
      { type: 'bytes', name: 'operatorNotificationData', value: '0x' },
    ],
    hasSpecs: [LSPType.LSP8IdentifiableDigitalAsset],
  },

  {
    label: 'üè¶ Mint LSP8',
    call: 'mint',
    inputs: [
      { type: 'address', name: 'to' },
      { type: 'bytes32', name: 'tokenId', value: '1' },
      { type: 'bool', name: 'force', value: false },
      { type: 'bytes', name: 'data', value: '0x' },
    ],
    hasSpecs: [LSPType.LSP8IdentifiableDigitalAsset],
  },
  {
    label: 'üí∞ Transfer Ownership UP',
    call: 'transferOwnership',
    inputs: [{ type: 'address', name: 'newOwner' }],
    hasSpecs: [LSPType.UP],
  },
  {
    label: 'üí∞ Accept Ownership UP',
    call: 'acceptOwnership',
    inputs: [],
    hasSpecs: [LSPType.UP],
  },
  {
    label: 'üí∞ Renounce Ownership UP',
    call: 'renounceOwnership',
    inputs: [],
    hasSpecs: [LSPType.UP],
  },
  {
    label: 'üí∞ Transfer ERC20/ERC777',
    call: 'transfer',
    inputs: [
      { type: 'address', name: 'to', value: sampleUP },
      { type: 'uint256', name: 'amount', isWei: 'ether', value: '1' },
    ],
    hasSpecs: [LSPType.ERC20, LSPType.ERC777],
  },
  {
    label: 'üí∞ Send ERC777',
    call: 'send',
    hasSpecs: [LSPType.ERC777],
    inputs: [
      { type: 'address', name: 'to' },
      { type: 'uint256', name: 'amount', isWei: 'ether', value: '1' },
      { type: 'bytes', name: 'data', value: '0x' },
    ],
  },
  {
    label: 'üí∞Operator Send ERC777',
    call: 'operatorSend',
    hasSpecs: [LSPType.ERC777],
    inputs: [
      { type: 'address', name: 'sender' },
      { type: 'address', name: 'recipient' },
      { type: 'uint256', name: 'amount', isWei: 'ether', value: '1' },
      { type: 'bytes', name: 'data', value: '0x' },
      { type: 'bytes', name: 'operatorData', value: '0x' },
    ],
  },
  {
    label: 'üí∞Operator Burn ERC777',
    call: 'operatorBurn',
    hasSpecs: [LSPType.ERC777],
    inputs: [
      { type: 'address', name: 'account' },
      { type: 'uint256', name: 'amount', isWei: 'ether', value: '1' },
      { type: 'bytes', name: 'data', value: '0x' },
      { type: 'bytes', name: 'operatorData', value: '0x' },
    ],
  },
  {
    label: 'üí∞ TransferFrom ERC721',
    call: 'transferFrom',
    inputs: [
      { type: 'address', name: 'from' },
      { type: 'address', name: 'to' },
      { type: 'uint256', name: 'amount', isWei: 'ether', value: '1' },
    ],
    hasSpecs: [LSPType.ERC721],
  },
  {
    label: 'üí∞ Approve ERC721 / ERC20',
    call: 'approve',
    inputs: [
      { type: 'address', name: 'approved' },
      { type: 'uint256', name: 'tokenId', value: '1' },
    ],
    hasSpecs: [LSPType.ERC721, LSPType.ERC20],
  },
  {
    label: 'üí∞ SafeTransferFrom ERC1155',
    call: 'safeTransferFrom',
    inputs: [
      { type: 'address', name: 'from' },
      { type: 'address', name: 'to' },
      { type: 'uint256', name: 'id' },
      { type: 'uint256', name: 'amount', isWei: 'ether', value: '1' },
      { type: 'bytes', name: 'data', value: '0x' },
    ],
    hasSpecs: [LSPType.Unknown],
  },
  {
    label: 'üè¶ Mint ERC20/ERC777/LSP7',
    call: 'mint',
    hasSpecs: [LSPType.ERC777, LSPType.ERC20, LSPType.LSP7DigitalAsset],
    inputs: [
      { type: 'address', name: 'to' },
      { type: 'uint256', name: 'amount', isWei: 'ether', value: '100' },
    ],
  },
  {
    label: 'üéõÔ∏è SetData',
    call: 'setDataBatch',
    hasSpecs: [
      LSPType.UP,
      LSPType.LSP3ProfileMetadata,
      LSPType.LSP7DigitalAsset,
      LSPType.LSP8IdentifiableDigitalAsset,
      LSPType.LSP9Vault,
    ],
    inputs: [
      {
        type: 'bytes32[]',
        name: 'keys',
        isPairs: true,
        isKey: true,
      },
      { type: 'bytes[]', name: 'values', isPairs: true },
    ],
  },
  {
    label: '‚õîÔ∏è Call revertWithCustomError',
    call: 'revertWithCustomError',
    inputs: [],
    hasSpecs: [LSPType.ERROR_TEST],
    to: errorContract,
    amount: '0',
  },
  {
    label: '‚õîÔ∏è Call revertWithErrorString',
    call: 'revertWithErrorString',
    inputs: [],
    hasSpecs: [LSPType.ERROR_TEST],
    to: errorContract,
    amount: '0',
  },
  {
    label: '‚õîÔ∏è Call revertWithPanicError',
    call: 'revertWithPanicError',
    inputs: [],
    hasSpecs: [LSPType.ERROR_TEST],
    to: errorContract,
    amount: '0',
  },
  {
    label: '‚õîÔ∏è Call revertWithNoErrorData',
    call: 'revertWithNoErrorData',
    inputs: [],
    hasSpecs: [LSPType.ERROR_TEST],
    to: errorContract,
    amount: '0',
  },
  {
    label: 'ü¶æ Sample call data',
    call: 'init',
    inputs: [
      {
        type: 'address[]',
        name: 'addresses',
        value: [
          '0x69909C12C875271AdC49155Cc8D01dBF67FE82f1',
          '0xB27F5845E6Ce846C02209Bd2497780099611b9a0',
        ],
      },
      {
        type: 'bytes32',
        name: 'data',
        value:
          '0x40b8bec57d7b5ff0dbd9e9acd0a47dfeb0101e1a203766f5ccab00445fbf39e9',
      },
      { type: 'uint256[]', name: 'numbers', value: ['2345675643', '123292'] },
      { type: 'bool', name: 'force', value: true },
      { type: 'string', name: 'scream', value: 'Hello!' },
      {
        type: 'string',
        name: 'description',
        value:
          'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',
      },
    ],
  },
]
